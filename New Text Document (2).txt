package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;

@TeleOp(name = "AZLifttestava3.java (Blocks to Java)")
public class AZlifttestava3 extends LinearOpMode {

  private Servo servoendleft;
  private Servo servoendright;
  private DcMotor deriniseeu;
  private DcMotor backright;
  private DcMotor frontright;
  private DcMotor yoAsDcMotor;
  private DcMotor backleft;
  private DcMotor frontleft;

  /**
   * This function is executed when this Op Mode is selected from the Driver Station.
   */
  @Override
  public void runOpMode() {
    servoendleft = hardwareMap.get(Servo.class, "servoendleft");
    servoendright = hardwareMap.get(Servo.class, "servoendright");
    deriniseeu = hardwareMap.get(DcMotor.class, "derin i see u");
    backright = hardwareMap.get(DcMotor.class, "backright");
    frontright = hardwareMap.get(DcMotor.class, "frontright");
    yoAsDcMotor = hardwareMap.get(DcMotor.class, "yoAsDcMotor");
    backleft = hardwareMap.get(DcMotor.class, "backleft");
    frontleft = hardwareMap.get(DcMotor.class, "frontleft");

    // Put initialization blocks here.
    waitForStart();
    backright.setDirection(DcMotorSimple.Direction.REVERSE);
    frontright.setDirection(DcMotorSimple.Direction.REVERSE);
    if (opModeIsActive()) {
      // Put run blocks here.
      while (opModeIsActive()) {
        if (gamepad1.left_stick_y != 0) {
          Drivetrain();
        } else {
          if (gamepad1.left_stick_x != 0) {
            Turnpivot2();
          } else {
            if (gamepad1.right_stick_x != 0) {
              Turnpivot();
            }
          }
        }
        if (gamepad1.right_trigger != 0) {
          antilyft();
        }
        if (gamepad1.left_trigger != 0) {
          lyft();
        }
        if (gamepad1.right_trigger == 0 && gamepad1.left_trigger == 0) {
          yoAsDcMotor.setPower(0.1);
        }
        if (gamepad1.left_bumper == true) {
          End_activate();
        }
        if (gamepad1.right_bumper == true) {
          End_activate2();
        }
        if (gamepad1.left_bumper == false && gamepad1.right_bumper == false) {
          deriniseeu.setPower(0.00);
        }
        if (gamepad1.dpad_up) {
          Drivetrain1();
                  }
        if (gamepad1.dpad_down) {
          Drivetrain2();
        }
        if (gamepad1.dpad_left) {
          fastleftStrafe();
        }
        if (gamepad1.dpad_right) {
          fastrightStrafe();
        }
        if(gamepad1.x) {
          slowleftStrafe();
        }
        
        if(gamepad1.b) {
          slowrightStrafe();
        }
      
      
        STOP();
        // Put loop blocks here.
        telemetry.update();
      }
    
  }

  /**
   * Describe this function...
   */ 
   
   }
private void Turnpivot() {
    backleft.setPower(-gamepad1.right_stick_x);
    frontleft.setPower(-gamepad1.right_stick_x);
    backright.setPower(gamepad1.right_stick_x);
    frontright.setPower(gamepad1.right_stick_x);
  }
private void Turnpivot2() {
    backleft.setPower(-gamepad1.left_stick_x*0.5);
    frontleft.setPower(-gamepad1.left_stick_x*0.5);
    backright.setPower(gamepad1.left_stick_x*0.5);
    frontright.setPower(gamepad1.left_stick_x*0.5);
  }
  /**
   * Describe this function...
   */
  private void End_activate() {
    deriniseeu.setPower(0.75);
  }

  /*
   * Describe this function...
   */
  private void lyft() {
    yoAsDcMotor.setPower(-0.75);
  }

  /**
   * Describe this function...
   */
  private void antilyft() {
    yoAsDcMotor.setPower(0.75);
  }

  /**
   * Describe this function...
   */
  private void Strafe() {
    backleft.setPower(gamepad1.left_stick_x*0.75);
    frontleft.setPower(-gamepad1.left_stick_x*0.75);
    backright.setPower(-gamepad1.left_stick_x*0.75);
    frontright.setPower(gamepad1.left_stick_x*0.75);
  }
  
  private void fastrightStrafe() {
    backleft.setPower(1.1);
    frontleft.setPower(-1.1);
    backright.setPower(-1.1);
    frontright.setPower(1.1);
  }

 private void fastleftStrafe() {
    backleft.setPower(-1.1);
    frontleft.setPower(1.1);
    backright.setPower(1.1);
    frontright.setPower(-1.1);
  }

private void slowleftStrafe() {
    backleft.setPower(-0.6);
    frontleft.setPower(0.6);
    backright.setPower(0.6);
    frontright.setPower(-0.6);
  }
  
private void slowrightStrafe() {
    backleft.setPower(0.6);
    frontleft.setPower(-0.6);
    backright.setPower(-0.6);
    frontright.setPower(0.6);
  }
  /**
   * Describe this function...
   */
  private void End_activate2() {
    deriniseeu.setPower(-0.75);
  }

  /**
   * Describe this function...
   */
  private void STOP() {
    backleft.setPower(0);
    frontleft.setPower(0);
    backright.setPower(0);
    frontright.setPower(0);
  }
private void Drivetrain1() {
    backleft.setPower(-1);
    frontleft.setPower(-1);
    backright.setPower(-1);
    frontright.setPower(-1);
  }
  private void Drivetrain2() {
    backleft.setPower(1);
    frontleft.setPower(1);
    backright.setPower(1);
    frontright.setPower(1);
  }    
  private void Drivetrain3() {
    backleft.setPower(-1);
    frontleft.setPower(-1);
    backright.setPower(1);
    frontright.setPower(1);
  }
  private void Drivetrain4() {
    backleft.setPower(1);
    frontleft.setPower(1);
    backright.setPower(-1);
    frontright.setPower(-1);
  }
  /**
   * Describe this function...
   */
  private void Drivetrain() {
    backleft.setPower(gamepad1.left_stick_y*0.5);
    frontleft.setPower(gamepad1.left_stick_y*0.5);
    backright.setPower(gamepad1.left_stick_y*0.5);
    frontright.setPower(gamepad1.left_stick_y*0.5);
    ;
  }
}
